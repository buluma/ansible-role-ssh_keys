# tasks file
---
# prepare
- name: cp -rfT /etc/skel /root
  ansible.builtin.raw: |
    set -eu
    cp -rfT /etc/skel /root
  changed_when: false
  failed_when: false

- name: setenforce 0
  ansible.builtin.raw: |
    set -eu
    setenforce 0
    sed -i 's/^SELINUX=.*$/SELINUX=permissive/g' /etc/selinux/config
  changed_when: false
  failed_when: false

- name: systemctl stop firewalld.service
  ansible.builtin.raw: |
    set -eu
    systemctl stop firewalld.service
    systemctl disable firewalld.service
  changed_when: false
  failed_when: false

- name: systemctl stop ufw.service
  ansible.builtin.raw: |
    set -eu
    systemctl stop ufw.service
    systemctl disable ufw.service
  changed_when: false
  failed_when: false

- name: debian | apt-get install *.deb
  ansible.builtin.raw: |
    set -eu
    DEBIAN_FRONTEND=noninteractive apt-get install -y bzip2 ca-certificates curl gcc gnupg gzip hostname iproute2 passwd procps python3 python3-apt python3-jmespath python3-lxml python3-pip python3-setuptools python3-venv python3-virtualenv python3-wheel rsync sudo tar unzip util-linux xz-utils zip
  when: ansible_os_family | lower == "debian"
  changed_when: false
  failed_when: false

- name: fedora | yum install *.rpm
  ansible.builtin.raw: |
    set -eu
    yum install -y bzip2 ca-certificates curl gcc gnupg2 gzip hostname iproute procps-ng python3 python3-dnf-plugin-versionlock python3-jmespath python3-libselinux python3-lxml python3-pip python3-setuptools python3-virtualenv python3-wheel rsync shadow-utils sudo tar unzip util-linux xz yum-utils zip
  when: ansible_distribution | lower == "fedora"
  changed_when: false
  failed_when: false

- name: redhat-9 | yum install *.rpm
  ansible.builtin.raw: |
    set -eu
    yum-config-manager --enable crb || echo $?
    yum-config-manager --enable codeready-builder-beta-for-rhel-9-x86_64-rpms || echo $?
    yum install -y http://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm
    yum install -y bzip2 ca-certificates curl gcc gnupg2 gzip hostname iproute procps-ng python3 python3-dnf-plugin-versionlock python3-jmespath python3-libselinux python3-lxml python3-pip python3-setuptools python3-virtualenv python3-wheel rsync shadow-utils sudo tar unzip util-linux xz yum-utils zip
  when: ansible_os_family | lower == "redhat" and ansible_distribution_major_version | lower == "9"
  changed_when: false
  failed_when: false

- name: redhat-8 | yum install *.rpm
  ansible.builtin.raw: |
    set -eu
    yum install -y http://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
    yum install -y bzip2 ca-certificates curl gcc gnupg2 gzip hostname iproute procps-ng python3 python3-dnf-plugin-versionlock python3-jmespath python3-libselinux python3-lxml python3-pip python3-setuptools python3-virtualenv python3-wheel rsync shadow-utils sudo tar unzip util-linux xz yum-utils zip
  when: ansible_os_family | lower == "redhat" and ansible_distribution_major_version | lower == "8"
  changed_when: false
  failed_when: false

- name: redhat-7 | yum install *.rpm
  ansible.builtin.raw: |
    set -eu
    subscription-manager repos --enable=rhel-7-server-optional-rpms || echo $?
    yum install -y http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
    yum install -y bzip2 ca-certificates curl gcc gnupg2 gzip hostname iproute procps-ng python3 python3-jmespath python3-libselinux python3-lxml python3-pip python3-setuptools python3-virtualenv python3-wheel rsync shadow-utils sudo tar unzip util-linux xz yum-plugin-versionlock yum-utils zip
  when: ansible_os_family | lower == "redhat" and ansible_distribution_major_version | lower == "7"
  changed_when: false
  failed_when: false

- name: suse | zypper -n install *.rpm
  ansible.builtin.raw: |
    set -eu
    zypper -n install -y bzip2 ca-certificates curl gcc gpg2 gzip hostname iproute2 procps python3 python3-jmespath python3-lxml python3-pip python3-setuptools python3-virtualenv python3-wheel rsync shadow sudo tar unzip util-linux xz zip
  when: ansible_os_family | lower == "suse"
  changed_when: false
  failed_when: false

# start main
- name: Installing packages
  ansible.builtin.package:
    name: "{{ openssl_packages }}"
    state: present

# install setuptools/python3-cffi
# - name: Install a list of packages (debian)
#   ansible.builtin.apt:
#     pkg:
#       # - setuptools
#       - libffi
#   when: ansible_os_family | lower == "debian"

- import_tasks: generate.yml
  tags:
    - configuration
    - ssh-keys
    - ssh-keys-generate

- import_tasks: general.yml
  tags:
    - configuration
    - ssh-keys
    - ssh-keys-general

- import_tasks: private-keys.yml
  tags:
    - configuration
    - ssh-keys
    - ssh-keys-private-keys

- import_tasks: public-keys.yml
  tags:
    - configuration
    - ssh-keys
    - ssh-keys-public-keys

- import_tasks: authorized-keys.yml
  tags:
    - configuration
    - ssh-keys
    - ssh-keys-authorized-keys

- import_tasks: known-hosts.yml
  tags:
    - configuration
    - ssh-keys
    - ssh-keys-known-hosts
